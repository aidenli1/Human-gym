<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.dao.MyPageDAO">

<insert id="inbodyInsert">
	insert into 
		inbody (userNum, userGender, height,
			weight, skeletalMuscleMass, bodyFatMass, bodyWater,
			protein, muscleMass, leanBodyMass, minerals, BMI,
			waistHipRatio, BMR, bodyShape)
	values (#{userNum}, #{userGender},
			#{height}, #{weight}, #{skeletalMuscleMass}, #{bodyFatMass},
			#{bodyWater}, #{protein}, #{muscleMass}, #{leanBodyMass}, #{minerals},
			#{BMI}, #{waistHipRatio}, #{BMR}, #{bodyShape})
</insert>


<select id="inbodyDetail" resultType="com.spring.dto.InbodyDTO"> 
	select 
		* 
	from 
		inbody
	where 
		userNum = #{userNum} 
</select>

<update id="inbodyUpdate"> 
	update 
		inbody 
	set 
			height = #{height}, weight = #{weight}, skeletalMuscleMass = #{skeletalMuscleMass}, 
			bodyFatMass= #{bodyFatMass}, bodyWater = #{bodyWater}, protein = #{protein}, 
			muscleMass = #{muscleMass}, leanBodyMass = #{leanBodyMass}, minerals = #{minerals},
			BMI = #{BMI}, waistHipRatio = #{waistHipRatio}, BMR = #{BMR}, bodyShape = #{bodyShape}
	where 
		userNum = #{userNum} 
</update>

<delete id="inbodyDelete"> 
	delete from 
		inbody 
	where 
		userNum = #{userNum} 
</delete>


<insert id="recordInsert">
		insert into
		record (recordNum, userNum, useDate, startHour, startMinute, endHour, endMinute)
		values (seq_record.nextval,#{userNum}, #{useDate}, #{startHour}, #{startMinute}, #{endHour}, #{endMinute})
</insert>


<select id="recordDetail" resultType="com.spring.dto.RecordDTO">
 select * 
 from record 
 where userNum = #{userNum} and recordNum = #{recordNum}
</select>

<update id="recordUpdate"> 
	update 
		record 
	set 
		startHour = #{startHour}, startMinute = #{startMinute},
		endHour = #{endHour}, endMinute = #{endMinute}
	where 
		userNum = #{userNum} and recordNum=#{recordNum}
</update>


<delete id="recordDelete"> 
	delete from 
		record 
	where 
		recordNum = #{recordNum} 
</delete>

<select id="recordMain" resultType="com.spring.dto.RecordDTO">
	<![CDATA[
	select *
	from (
		select 
			RECORDNUM
	        , USERNUM
	        , USEDATE
	        , STARTHOUR
	        , STARTMINUTE
	        , ENDHOUR
	        , ENDMINUTE
	        , CONCAT(
	           CONCAT(TRUNC(((ENDHOUR*60+ENDMINUTE-STARTHOUR*60-STARTMINUTE)/60),0),'시간 '),
	        	CONCAT( MOD((ENDHOUR*60+ENDMINUTE -STARTHOUR*60-STARTMINUTE),60),'분 ')
	          ) as PLAYTIME
		from record
		where 
			 userNum = #{userNum}
		order by recordNum desc
	) where rownum <= 1
	]]>				
</select>

<select id="recordList" resultType="com.spring.dto.RecordDTO">
	<![CDATA[
	select *
	from (
		select 
			RECORDNUM
	        , USERNUM
	        , USEDATE
	        , STARTHOUR
	        , STARTMINUTE
	        , ENDHOUR
	        , ENDMINUTE
	        , CONCAT(
	           CONCAT(TRUNC(((ENDHOUR*60+ENDMINUTE-STARTHOUR*60-STARTMINUTE)/60),0),'시간 '),
	        	CONCAT( MOD((ENDHOUR*60+ENDMINUTE -STARTHOUR*60-STARTMINUTE),60),'분 ')
	          ) as PLAYTIME
		from record
		where 
			 userNum = #{userNum}
		order by recordNum desc
	) where rownum <= 10
	]]>				
</select>	


<!-- <select id="listCriteria" resultType="com.spring.dto.UserRecordDTO">
	<![CDATA[select recordNum, userNum, startTime, endTime, totalTime, useDate
			 from (select rownum rn, a.*
   				 from (
			        select userrecord.* 
			        from userrecord 
			        where 1=1]]> 
	<![CDATA[order by recordNum desc) a where rownum <= #{page}*(#{perPageNum})) b
    		 where rn>(#{page}-1)*#{perPageNum}]]> 
</select> -->

	<select id="listCount" resultType="int">
	<![CDATA[
	select 
	  count(recordNum) 
	from 
	 record
	where 
	  userNum =#{userNum} 
	]]>
	</select>
	
	<!--  차트 데이터 -->
<select id="chartData" resultType="com.spring.dto.ExerciseChartDTO">
	SELECT
	    AA.USERNUM, 
	    SUM(AA.SETCOUNT) as SETCOUNT,    
	    AA.EXPART,
	    (CASE 
	        WHEN EXPART = '전신' THEN 'userAll'
	        WHEN EXPART = '삼두' THEN 'userArm'
	        WHEN EXPART = '이두' THEN 'userArm'
	        WHEN EXPART = '전완' THEN 'userArm'
	        WHEN EXPART = '가슴' THEN 'userUpper'
	        WHEN EXPART = '어깨' THEN 'userUpper'
	        WHEN EXPART = '등' THEN 'userBack'
	        WHEN EXPART = '허벅지' THEN 'userLower'
	        WHEN EXPART = '엉덩이' THEN 'userLower'
	        WHEN EXPART = '종아리' THEN 'userLower'
	        WHEN EXPART = '복근' THEN 'userCore'
	        WHEN EXPART = '코어' THEN 'userCore'
	        ELSE NULL
	    END) EXPARTCODE
	FROM (
	    select
	        A.USERNUM,    
	        A.EXID,
	        A.EXDATE,
	        A.SETCOUNT,
	        B.EXNAME,
	        B.EXPART
	    from USEREX A
	    inner join EXERCISE B on A.EXID = B.EXID
	) AA
	WHERE AA.USERNUM = #{userNum}
	group by AA.USERNUM, AA.SETCOUNT, AA.EXPART
</select>

<!-- 운동이름과 세트횟수 읽기 -->
<select id="exNameCount"  resultType="com.spring.dto.ExerciseChartDTO">
	select * from userEX 
	where userNum = ${userNum} and recordNum= #{recordNum}
 </select>

<insert id="chartInsert" >
		insert into
		userEX ( userNum, exDate, exId , exName, setCount,recordNum)
		values (#{userNum}, #{useDate}, #{exId}, #{exName}, #{setCount},seq_record.nextval-1)
</insert>

<update id="chartUpdate">
	update 
		userEx 
	set 
		exId= #{exId}, exName = #{exName}, setCount = #{setCount}
	where 
		userNum = #{userNum} and recordNum=#{recordNum}
</update>

<select id="exidSelect" resultType="com.spring.dto.ExerciseChartDTO">
		select exId from exercise where exName=#{exName}
</select>

<select id="exList" resultType="com.spring.dto.ExerciseChartDTO">
	<![CDATA[
	select *
	from (
		select 
			RECORDNUM
	        , USERNUM
	        , EXID
	        , EXNAME
	        , EXDATE
	        , SETCOUNT
	       
		from userEx
		where 
			 userNum = #{userNum}
		order by recordNum desc
	) where rownum <= 10
	]]>				
</select>	

<select id="exMain" resultType="com.spring.dto.ExerciseChartDTO">
	<![CDATA[
	select *
	from (
		select 
			RECORDNUM
	        , USERNUM
	        , EXID
	        , EXNAME
	        , EXDATE
	        , SETCOUNT
	       
		from userEx
		where 
			 userNum = #{userNum}
		order by recordNum desc
	) where rownum <= 1
	]]>				
</select>

<select id="routineList" resultType="routineDTO">
	select * 
	from
		routineBox
	where 
		userNum = #{userNum}
</select>

<insert id="routineInsert">
	insert into 
		routineBox (routineNum, userNum, routineName, routineEx)
	values (seq_routineBox.nextval, #{userNum}, #{routineName},
			#{routineEx})
</insert>

<delete id="routineDelete"> 
	delete 
	from 
		routineBox
	where 
		routineNum = #{routineNum} 
</delete>

<update id="routineUpdate">
	update 
		routineBox 
	set 
			routineName = #{routineName}, routineEx = #{routineEx}
	where 
		routineNum = #{routineNum} 
</update>

<select id="routineDetail" resultType="com.spring.dto.RoutineDTO"> 
	select 
		* 
	from 
		routineBox
	where 
		routineNum = #{routineNum}
</select>

<select id="routineAI" resultType="com.spring.dto.InbodyDTO"> 
	select 
		bodyfatmass = #{bodyfatmass},skeletalmusclemass = #{skeletalmusclemass} 
	from 
		inbody
</select>
</mapper>
